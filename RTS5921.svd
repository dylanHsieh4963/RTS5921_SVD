<?xml version="1.0" encoding="utf-8"?>
<device schemaVersion="1.3" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <!-- Product & Vendor -->
  <vendor>Realtek Semiconductor Corp.</vendor>
  <vendorID>Realtek SIBG</vendorID>
  <name>RTS5921</name>
  <series>RTS5921 Series</series>
  <version>0.01</version>
  <description>Realtek Real-M300 Arm v8-M Instruction Processor</description>
  <licenseText>
	  The license belong to Realtek Semiconductor Corp. All the rights reserved.
  </licenseText>

  <!-- CPU -->
  <cpu>                                                           <!-- details about the cpu embedded in the device -->
    <name>CM0</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <mpuPresent>false</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>3</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>

    <!-- byte addressable memory -->
  <addressUnitBits>8</addressUnitBits>
  <!-- bus width is 32 bits -->
  <width>32</width>
  <!-- this is the default size (number of bits) of all peripherals and register that do not define "size" themselves -->
  <size>32</size>
  <!-- default access permission for all subsequent registers -->
  <access>read-write</access>
  <!-- by default all bits of the registers are initialized to 0 on reset -->
  <resetValue>0x00000000</resetValue>
  <!-- by default all 32Bits of the registers are used -->
  <resetMask>0xffffffff</resetMask>

  <!-- Peripherals -->
  <peripherals>
    <!-- INTR_SPIC -->
    <peripheral>
      <!-- Description -->
      <name>INTR_SPIC</name>
      <version>1.00</version>
      <description>Realtek RXI-312 SPI Controller</description>
      <groupName>SPIC</groupName>
      <headerStructName>SPIC</headerStructName>
      <baseAddress>0x40000000</baseAddress>
      <size>32</size>
      <access>read-write</access>

      <!-- Address Range -->
      <addressBlock>
        <offset>0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>

      <!-- Interrup -->
      <interrupt>
        <name>ISPIC</name>
        <description>Internal SPIC Interrupt</description>
        <value>9</value>
      </interrupt>

      <!-- Registers -->
      <registers>
				<!-- CTRLR0 -->
				<register>
						<name>CTRLR0</name>
						<description>Control Register 0</description>
						<addressOffset>0x000</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0xFFFFFFFF</resetValue>
				</register>

				<!-- RX_NDF -->
				<register>
						<name>RX_NDF</name>
						<description>Control Register 1</description>
						<addressOffset>0x004</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- SSIENR -->
				<register>
						<name>SSIENR</name>
						<description>SPIC Enable Register</description>
						<addressOffset>0x008</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- MWCR -->
				<register>
						<name>MWCR</name>
						<description>N/A</description>
						<addressOffset>0x00C</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- SER -->
				<register>
						<name>SER</name>
						<description>Slave Enable Register</description>
						<addressOffset>0x010</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- BAUDR -->
				<register>
						<name>BAUDR</name>
						<description>Baud Rate Select</description>
						<addressOffset>0x014</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0xFFFFFFFF</resetValue>
				</register>

				<!-- TXFTLR -->
				<register>
						<name>TXFTLR</name>
						<description>Transmit FIFO Threshold level</description>
						<addressOffset>0x018</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- RXFTLR -->
				<register>
						<name>RXFTLR</name>
						<description>Receive FIFO Threshold level</description>
						<addressOffset>0x01C</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0xFFFFFFFF</resetValue>
				</register>

				<!-- TXFLR -->
				<register>
						<name>TXFLR</name>
						<description>Transmit FIFO level Register</description>
						<addressOffset>0x020</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- RXFLR -->
				<register>
						<name>RXFLR</name>
						<description>Receive FIFO level Register</description>
						<addressOffset>0x024</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- SR -->
				<register>
						<name>SR</name>
						<description>Status Register</description>
						<addressOffset>0x028</addressOffset>
						<size>32</size>
						<access>read-only</access>
						<resetValue>0x00000006</resetValue>
				</register>

				<!-- IMR -->
				<register>
						<name>IMR</name>
						<description>Interrupt Mask Register</description>
						<addressOffset>0x02C</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x000001EE</resetValue>
				</register>

				<!-- ISR -->
				<register>
						<name>ISR</name>
						<description>Interrupt Status Register</description>
						<addressOffset>0x030</addressOffset>
						<size>32</size>
						<access>read-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- RISR -->
				<register>
						<name>RISR</name>
						<description>Raw Interrupt Status Register</description>
						<addressOffset>0x034</addressOffset>
						<size>32</size>
						<access>read-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- TXOICR -->
				<register>
						<name>TXOICR</name>
						<description>Transmit FIFO Overflow Interrupt Clear Register</description>
						<addressOffset>0x038</addressOffset>
						<size>32</size>
						<access>write-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- RXOICR -->
				<register>
						<name>RXOICR</name>
						<description>Receive FIFO Overflow Interrupt Clear Register</description>
						<addressOffset>0x03C</addressOffset>
						<size>32</size>
						<access>read-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- RXUICR -->
				<register>
						<name>RXUICR</name>
						<description>Receive FIFO Underflow Interrupt Clear Register</description>
						<addressOffset>0x040</addressOffset>
						<size>32</size>
						<access>read-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- MSTICR -->
				<register>
						<name>MSTICR</name>
						<description>Master error Interrupt Clear Register</description>
						<addressOffset>0x044</addressOffset>
						<size>32</size>
						<access>write-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- ICR -->
				<register>
						<name>ICR</name>
						<description>Interrupt Clear Register</description>
						<addressOffset>0x048</addressOffset>
						<size>32</size>
						<access>write-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- DMACR -->
				<register>
						<name>DMACR</name>
						<description>DMA Control Register</description>
						<addressOffset>0x04C</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- DMATDLR -->
				<register>
						<name>DMATDLR</name>
						<description>DMA Transmit Data Level Register</description>
						<addressOffset>0x050</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- DMARDLR -->
				<register>
						<name>DMARDLR</name>
						<description>DMA Receive Data Level Register</description>
						<addressOffset>0x054</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- IDR -->
				<register>
						<name>IDR</name>
						<description>Identification Register</description>
						<addressOffset>0x058</addressOffset>
						<size>32</size>
						<access>read-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- SPIC_VERSION -->
				<register>
						<name>SPIC_VERSION</name>
						<description>SPIC version ID Register</description>
						<addressOffset>0x05C</addressOffset>
						<size>32</size>
						<access>read-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- DR -->
				<register>
						<name>DR</name>
						<description>Data Register</description>
						<addressOffset>0x060</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- DM_DR -->
				<register>
						<name>DM_DR</name>
						<description>Data Mask Data Register</description>
						<addressOffset>0x0A0</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- READ_FAST_SINGLE -->
				<register>
						<name>READ_FAST_SINGLE</name>
						<description>Fast Read Data Command of SPI Flash</description>
						<addressOffset>0x0E0</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000B0B</resetValue>
				</register>

				<!-- READ_DUAL_DATA -->
				<register>
						<name>READ_DUAL_DATA</name>
						<description>Dual Output Read Command of SPI Flash</description>
						<addressOffset>0x0E4</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x0000003B</resetValue>
				</register>

				<!-- READ_DUAL_ADDR_DATA -->
				<register>
						<name>READ_DUAL_ADDR_DATA</name>
						<description>Dual I/O Read Command of SPI Flash</description>
						<addressOffset>0x0E8</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x000000BB</resetValue>
				</register>

				<!-- READ_QUAD_DATA -->
				<register>
						<name>READ_QUAD_DATA</name>
						<description>Quad Output Read Command of SPI Flash</description>
						<addressOffset>0x0EC</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x0000006B</resetValue>
				</register>

				<!-- READ_QUAD_ADDR_DATA -->
				<register>
						<name>READ_QUAD_ADDR_DATA</name>
						<description>Quad I/O Read Command of SPI Flash</description>
						<addressOffset>0x0F0</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0xA500EB</resetValue>
				</register>

				<!-- WRITE_SINGLE -->
				<register>
						<name>WRITE_SINGLE</name>
						<description>Page Program Command of SPI Flash</description>
						<addressOffset>0x0F4</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000202</resetValue>
				</register>

				<!-- WRITE_DUAL_DATA -->
				<register>
						<name>WRITE_DUAL_DATA</name>
						<description>Dual Data Input Program Command of SPI Flash</description>
						<addressOffset>0x0F8</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x000000A2</resetValue>
				</register>

				<!-- WRITE_DUAL_ADDR_DATA -->
				<register>
						<name>WRITE_DUAL_ADDR_DATA</name>
						<description>Dual Address and Data Output Read Command of SPI Flash</description>
						<addressOffset>0x0FC</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- WRITE_QUAD_DATA -->
				<register>
						<name>WRITE_QUAD_DATA</name>
						<description>Quad Data Input Program Command of SPI Flash</description>
						<addressOffset>0x100</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000032</resetValue>
				</register>


				<!-- WRITE_QUAD_ADDR_DATA -->
				<register>
						<name>WRITE_QUAD_ADDR_DATA</name>
						<description>Quad Address and Data Output Read Command of SPI Flash</description>
						<addressOffset>0x104</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000038</resetValue>
				</register>

				<!-- WRITE_ENABLE -->
				<register>
						<name>WRITE_ENABLE</name>
						<description>Write Enable Command of SPI Flash</description>
						<addressOffset>0x108</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000606</resetValue>
				</register>

				<!-- READ_STATUS -->
				<register>
						<name>READ_STATUS</name>
						<description>Read Status Command of SPI Flash</description>
						<addressOffset>0x10C</addressOffset>
						<size>32</size>
						<access>read-only</access> <!-- Assuming read-only as it's a status register -->
						<resetValue>0x10000505</resetValue>
				</register>

				<!-- CTRLR2 -->
				<register>
						<name>CTRLR2</name>
						<description>Control Register 2</description>
						<addressOffset>0x110</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0xFFFFFFFF</resetValue> <!-- Placeholder for configuration-dependent reset value -->
				</register>

				<!-- FBAUDR -->
				<register>
						<name>FBAUDR</name>
						<description>Fast Baud Rate Select</description>
						<addressOffset>0x114</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000001</resetValue>
				</register>

				<!-- USER_LENGTH -->
				<register>
						<name>USER_LENGTH</name>
						<description>User Length Register</description>
						<addressOffset>0x118</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00030000</resetValue>
				</register>

				<!-- AUTO_LENGTH -->
				<register>
						<name>AUTO_LENGTH</name>
						<description>Auto Address Length Register</description>
						<addressOffset>0x11C</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0xFFFFFFFF</resetValue> <!-- Placeholder for configuration-dependent reset value -->
				</register>

				<!-- VALID_CMD -->
				<register>
						<name>VALID_CMD</name>
						<description>Valid Command Register</description>
						<addressOffset>0x120</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0xFFFFFFFF</resetValue> <!-- Placeholder for configuration-dependent reset value -->
				</register>

				<!-- FLASH_SIZE -->
				<register>
						<name>FLASH_SIZE</name>
						<description>Flash Size Register</description>
						<addressOffset>0x124</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- FLUSH_FIFO -->
				<register>
						<name>FLUSH_FIFO</name>
						<description>Flush FIFO Register</description>
						<addressOffset>0x128</addressOffset>
						<size>32</size>
						<access>write-only</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- DUM_BYTE -->
				<register>
						<name>DUM_BYTE</name>
						<description>Dummy Byte Value</description>
						<addressOffset>0x12C</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- TX_NDF -->
				<register>
						<name>TX_NDF</name>
						<description>TX NDF</description>
						<addressOffset>0x130</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- DEVICE_INFO -->
				<register>
						<name>DEVICE_INFO</name>
						<description>Device Info</description>
						<addressOffset>0x134</addressOffset>
						<size>32</size>
						<access>read-only</access>
						<resetValue>0x00000118</resetValue>
				</register>

				<!-- TPR0 -->
				<register>
						<name>TPR0</name>
						<description>Timing Parameters</description>
						<addressOffset>0x138</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0xFFFFFFFF</resetValue> <!-- Placeholder for configuration-dependent reset value -->
				</register>

				<!-- AUTO_LENGTH2 -->
				<register>
						<name>AUTO_LENGTH2</name>
						<description>Auto Address Length Register 2</description>
						<addressOffset>0x13C</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000000</resetValue>
				</register>

				<!-- TPR1 -->
				<register>
						<name>TPR1</name>
						<description>Timing Parameters Register 1</description>
						<addressOffset>0x140</addressOffset>
						<size>32</size>
						<access>read-write</access>
						<resetValue>0x00000001</resetValue>
				</register>

				<!-- SLOT_STARVE -->
				<register>
					<name>SLOT_STARVE</name>
					<description>Slot starvation control register</description>
					<addressOffset>0x144</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x000FFF30</resetValue>
				</register>

				<!-- PDEX_CTRL0 -->
				<register>
					<name>PDEX_CTRL0</name>
					<description>PDEX Ctrl Register 0</description>
					<addressOffset>0x148</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x000000B9</resetValue>
				</register>

				<!-- PDEX_CTRL1 -->
				<register>
					<name>PDEX_CTRL1</name>
					<description>PDEX Ctrl Register 1</description>
					<addressOffset>0x14C</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- PDEX_CTRL2 -->
				<register>
					<name>PDEX_CTRL2</name>
					<description>PDEX Ctrl Register 2</description>
					<addressOffset>0x150</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00AB0041</resetValue>
				</register>

				<!-- TPR2 -->
				<register>
					<name>TPR2</name>
					<description>Timing parameters Register 2</description>
					<addressOffset>0x154</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000604</resetValue>
				</register>

				<!-- ICG_EN -->
				<register>
					<name>ICG_EN</name>
					<description>Clock gating enable control register</description>
					<addressOffset>0x158</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x000FFFFF</resetValue>
				</register>

				<!-- WBUF_ID -->
				<register>
					<name>WBUF_ID</name>
					<description>WBUF ID control register</description>
					<addressOffset>0x15C</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- DCX_CTRL -->
				<register>
					<name>DCX_CTRL</name>
					<description>LCDC DCX control register</description>
					<addressOffset>0x160</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- DCX_CMD -->
				<register>
					<name>DCX_CMD</name>
					<description>LCDC cmd phase DCX control bit value register</description>
					<addressOffset>0x164</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- DCX_ADDR -->
				<register>
					<name>DCX_ADDR</name>
					<description>LCDC addr phase DCX control bit value register</description>
					<addressOffset>0x168</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- DCX_DATA -->
				<register>
					<name>DCX_DATA</name>
					<description>LCDC data phase DCX control bit value register</description>
					<addressOffset>0x16C</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- PAGE_CTRL0 -->
				<register>
					<name>PAGE_CTRL0</name>
					<description>NAND page ctrl Register 0</description>
					<addressOffset>0x170</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- PAGE_CTRL1 -->
				<register>
					<name>PAGE_CTRL1</name>
					<description>NAND page ctrl Register 1</description>
					<addressOffset>0x174</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- ST_DR 0x180~0x1BC -->
				<register>
					<name>ST_DR</name>
					<description>Status Data Register</description>
					<addressOffset>0x180</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- STFLR -->
				<register>
					<name>STFLR</name>
					<description>Status FIFO level Register</description>
					<addressOffset>0x1C0</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- PAGE_READ -->
				<register>
					<name>PAGE_READ</name>
					<description>Page Read Command of NAND Flash</description>
					<addressOffset>0x1D0</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x000C0013</resetValue>
				</register>

				<!-- SEC_BASE_0 -->
				<register>
					<name>SEC_BASE_0</name>
					<description>SEC region 0 base address register</description>
					<addressOffset>0x200</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- SEC_END_0 -->
				<register>
					<name>SEC_END_0</name>
					<description>SEC region 0 end address register</description>
					<addressOffset>0x204</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- SEC_NONCE_0 -->
				<register>
					<name>SEC_NONCE_0</name>
					<description>SEC region 0 nonce register</description>
					<addressOffset>0x208</addressOffset>
					<size>32</size>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
				</register>

				<!-- SEC_IDR -->
				<register>
					<name>SEC_IDR</name>
					<description>SEC ID register</description>
					<addressOffset>0x3FC</addressOffset>
					<size>32</size>
					<access>read-only</access>
					<resetValue>0x00000000</resetValue>
				</register>
      </registers>
    </peripheral>
  </peripherals>
</device>